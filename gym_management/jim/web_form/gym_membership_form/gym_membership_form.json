{
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "anonymous": 0,
 "apply_document_permissions": 0,
 "button_label": "Save",
 "client_script": "// Gym Subscription web form client script\n\nfrappe.web_form.after_load = () => {\n    console.log(\"\u2705 Gym Subscription Web Form loaded\");\n\n    // Initial calculations and UI setup\n    update_end_date();\n    update_final_price();\n    update_locker_description();\n    fetch_and_show_available_lockers();\n\n    // Event listeners\n    frappe.web_form.on('start_date', update_end_date);\n    frappe.web_form.on('plan_type', () => {\n        update_end_date();\n        update_final_price();\n    });\n    frappe.web_form.on('locker', () => {\n        update_final_price();\n        update_locker_description();\n    });\n};\n\nfunction update_end_date() {\n    let start_date = frappe.web_form.get_value('start_date');\n    let plan_type = frappe.web_form.get_value('plan_type');\n\n    if (!start_date || !plan_type) return;\n\n    let months = 0;\n\n    if (plan_type.includes(\"1 Month\")) {\n        months = 1;\n    } else if (plan_type.includes(\"3 Months\")) {\n        months = 3;\n    } else if (plan_type.includes(\"1 Year\")) {\n        months = 12;\n    }\n\n    if (months > 0) {\n        const end_date = frappe.datetime.add_months(start_date, months);\n        frappe.web_form.set_value('end_date', frappe.datetime.obj_to_str(end_date));\n        console.log(\"\ud83d\udcc5 End Date Updated:\", end_date);\n    }\n}\n\nfunction update_final_price() {\n    let plan_type = frappe.web_form.get_value('plan_type');\n    let locker = frappe.web_form.get_value('locker');\n\n    if (!plan_type) return;\n\n    // Extract \u20b9price from plan_type (e.g. \"1 Month >> (\u20b95000)\")\n    let price_match = plan_type.match(/\u20b9(\\d+)/);\n    let base_price = price_match ? parseInt(price_match[1]) : 0;\n\n    // Locker can be 0,1,2 etc.\n    let locker_count = parseInt(locker) || 0;\n\n    // Get locker price per locker from Gym Settings (async)\n    frappe.call({\n        method: \"frappe.client.get\",\n        args: {doctype: \"Gym Settings\", name: \"Gym Settings\"},\n        callback: function(r) {\n            let locker_price = 0;\n            if (r.message && r.message.locker_price_1m) {\n                locker_price = r.message.locker_price_1m * locker_count;\n            }\n            let total_price = base_price + locker_price;\n\n            frappe.web_form.set_value('final_price', total_price);\n            console.log(`\ud83d\udcb8 Final Price Updated: \u20b9${total_price}`);\n        }\n    });\n}\n\nfunction update_locker_description() {\n    let locker = frappe.web_form.get_value('locker');\n    let locker_count = parseInt(locker) || 0;\n\n    if (locker_count === 0) {\n        frappe.web_form.fields_dict.locker.df.description = \"\";\n    } else {\n        let locker_numbers = [];\n        for (let i = 0; i < locker_count; i++) {\n            let rand_num = Math.floor(100 + Math.random() * 900);\n            locker_numbers.push(`L${rand_num}`);\n        }\n        frappe.web_form.fields_dict.locker.df.description = \"Assigned Lockers: \" + locker_numbers.join(\", \");\n    }\n    // Refresh field UI to show updated description\n    frappe.web_form.fields_dict.locker.refresh();\n}\n\nfunction fetch_and_show_available_lockers() {\n    frappe.call({\n        method: \"frappe.client.get\",\n        args: {\n            doctype: \"Gym Settings\",\n            name: \"Gym Settings\"\n        },\n        callback: function(r) {\n            if (r.message) {\n                let settings = r.message;\n                let available = settings.total_lockers - settings.used_lockers;\n                console.log(`Available lockers: ${available}`);\n                // Optionally show this in a custom field if you add one named \"available_lockers\"\n                if (frappe.web_form.fields_dict.available_lockers) {\n                    frappe.web_form.set_value(\"available_lockers\", available);\n                }\n            }\n        }\n    });\n}\n",
 "condition_json": "[]",
 "creation": "2025-07-01 16:49:34.571329",
 "doc_type": "Gym Membership",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "is_standard": 1,
 "list_columns": [],
 "login_required": 0,
 "max_attachment_size": 0,
 "modified": "2025-07-02 15:22:54.249629",
 "modified_by": "Administrator",
 "module": "Jim",
 "name": "gym-membership-form",
 "owner": "Administrator",
 "published": 1,
 "route": "gym-subscription",
 "show_attachments": 0,
 "show_list": 0,
 "show_sidebar": 0,
 "title": "Gym Subscription",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "member",
   "fieldtype": "Link",
   "hidden": 0,
   "label": "Member",
   "max_length": 0,
   "max_value": 0,
   "options": "Gym Member",
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "plan_type",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Plan Type",
   "max_length": 0,
   "max_value": 0,
   "options": "1 Month >> (\u20b95000)\n3 Months  >> (\u20b99000)\n1 Year >> (\u20b914000)",
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "start_date",
   "fieldtype": "Date",
   "hidden": 0,
   "label": "Start Date",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "end_date",
   "fieldtype": "Date",
   "hidden": 0,
   "label": "End Date",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "status",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Status",
   "max_length": 0,
   "max_value": 0,
   "options": "Active\nExpired\nCancelled",
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "locker",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Locker",
   "max_length": 0,
   "max_value": 0,
   "options": "0\n1\n2",
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "final_price",
   "fieldtype": "Float",
   "hidden": 0,
   "label": "Final Price",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 1,
   "reqd": 0,
   "show_in_filter": 0
  }
 ]
}