{
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "anonymous": 0,
 "apply_document_permissions": 0,
 "button_label": "Save",
 "client_script": "function getCookieValue(name) {\n    const cookies = document.cookie.split('; ');\n    for (const cookie of cookies) {\n        const [key, value] = cookie.split('=');\n        if (key === name) return decodeURIComponent(value);\n    }\n    return null;\n}\n\nconst email = getCookieValue('user_id');\nconsole.log('user_id from cookie:', email);\n\nfrappe.web_form.after_load = () => {\n    console.log(\"Web Form loaded\");\n\n    // 1. Set Email field (Data)\n    frappe.web_form.set_value(\"email\", email).then(() => {\n        console.log(\"Email field set to:\", email);\n    });\n\n    // 2. Wait for grid to load\n    setTimeout(() => {\n        const grid = frappe.web_form.fields_dict.table_ctkk?.grid;\n        if (!grid) {\n            console.error(\"Child table grid not found\");\n            return;\n        }\n\n        console.log(\"Grid found, attaching listeners\");\n\n        grid.wrapper.on(\n            'input',\n            'input[data-fieldname=\"current_height\"], input[data-fieldname=\"current_weight\"]',\n            function () {\n                const $row = $(this).closest('.grid-row');\n                const row_name = $row.attr(\"data-name\");\n\n                const heightVal = $row.find('input[data-fieldname=\"current_height\"]').val();\n                const weightVal = $row.find('input[data-fieldname=\"current_weight\"]').val();\n                const bmiInput = $row.find('input[data-fieldname=\"bmi\"]');\n\n                const height = parseFloat(heightVal);\n                const weight = parseFloat(weightVal);\n\n                if (!height || !weight || height <= 0) {\n                    if (bmiInput) bmiInput.val('');\n                    return;\n                }\n\n                const bmi = (weight * 10000) / (height * height);\n                const bmiVal = bmi.toFixed(2);\n\n                if (bmiInput) {\n                    bmiInput.val(bmiVal).trigger('input');\n                    console.log(`Calculated BMI: ${bmiVal}`);\n                }\n\n                const rows = frappe.web_form.get_value(\"table_ctkk\") || [];\n                const row = rows.find(r => r.name === row_name);\n                if (row) {\n                    row.bmi = bmiVal;\n                    frappe.web_form.set_value(\"table_ctkk\", rows);\n                }\n            }\n        );\n    }, 800);\n};\n",
 "condition_json": "[]",
 "creation": "2025-07-11 18:16:31.551020",
 "doc_type": "BMI",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "is_standard": 1,
 "list_columns": [],
 "login_required": 0,
 "max_attachment_size": 0,
 "modified": "2025-07-11 18:40:27.809412",
 "modified_by": "Administrator",
 "module": "Jim",
 "name": "bmi",
 "owner": "Administrator",
 "published": 1,
 "route": "bmi",
 "show_attachments": 0,
 "show_list": 0,
 "show_sidebar": 0,
 "title": "BMI ",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "track_fitness_section",
   "fieldtype": "Section Break",
   "hidden": 0,
   "label": "Track Fitness",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "email",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Email",
   "max_length": 0,
   "max_value": 0,
   "options": "",
   "precision": "",
   "read_only": 1,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "table_ctkk",
   "fieldtype": "Table",
   "hidden": 0,
   "label": "Metrics Update",
   "max_length": 0,
   "max_value": 0,
   "options": "Metrics Update",
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  }
 ]
}